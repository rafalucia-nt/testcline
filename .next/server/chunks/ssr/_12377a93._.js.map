{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Arquetype/i18n/routing.ts"],"sourcesContent":["// src/i18n/routing.ts\r\nimport {defineRouting} from 'next-intl/routing';\r\n\r\nexport const routing = defineRouting({\r\n  locales: ['es', 'en'],\r\n  defaultLocale: 'es'\r\n});"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;AAEO,MAAM,UAAU,IAAA,mPAAa,EAAC;IACnC,SAAS;QAAC;QAAM;KAAK;IACrB,eAAe;AACjB","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Arquetype/i18n/request.ts"],"sourcesContent":["// src/i18n/request.ts\r\nimport {getRequestConfig} from 'next-intl/server';\r\nimport {hasLocale} from 'next-intl';\r\nimport {routing} from './routing';\r\n\r\nexport default getRequestConfig(async ({requestLocale}) => {\r\n  const requested = await requestLocale;\r\n  const locale = hasLocale(routing.locales, requested)\r\n    ? requested\r\n    : routing.defaultLocale;\r\n\r\n  return {\r\n    locale,\r\n    messages: (await import(`../global-messages/${locale}.json`)).default\r\n  };\r\n});\r\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;AACA;AACA;;;;uCAEe,IAAA,8QAAgB,EAAC,OAAO,EAAC,aAAa,EAAC;IACpD,MAAM,YAAY,MAAM;IACxB,MAAM,SAAS,IAAA,8LAAS,EAAC,0HAAO,CAAC,OAAO,EAAE,aACtC,YACA,0HAAO,CAAC,aAAa;IAEzB,OAAO;QACL;QACA,UAAU,CAAC;;;;;;;;;kBAAa,CAAC,mBAAmB,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;IACvE;AACF","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Arquetype/app/%5Blocale%5D/layout.tsx"],"sourcesContent":["// app/[locale]/layout.tsx\r\nimport {NextIntlClientProvider, hasLocale} from 'next-intl';\r\nimport {notFound} from 'next/navigation';\r\nimport {routing} from '@/i18n/routing';\r\n\r\nexport function generateStaticParams() {\r\n  return routing.locales.map((locale) => ({locale}));\r\n}\r\n\r\nexport default async function LocaleLayout({\r\n  children,\r\n  params\r\n}: {\r\n  children: React.ReactNode;\r\n  params: Promise<{locale: string}>;\r\n}) {\r\n  const {locale} = await params;                \r\n  if (!hasLocale(routing.locales, locale)) notFound();\r\n\r\n  return <NextIntlClientProvider locale={locale}>{children}</NextIntlClientProvider>;\r\n}\r\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;;;AAC1B;AAAA;AACA;AAAA;AACA;;;;;AAEO,SAAS;IACd,OAAO,0HAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAW,CAAC;YAAC;QAAM,CAAC;AAClD;AAEe,eAAe,aAAa,EACzC,QAAQ,EACR,MAAM,EAIP;IACC,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM;IACvB,IAAI,CAAC,IAAA,8LAAS,EAAC,0HAAO,CAAC,OAAO,EAAE,SAAS,IAAA,iMAAQ;IAEjD,qBAAO,8OAAC,4RAAsB;QAAC,QAAQ;kBAAS;;;;;;AAClD","debugId":null}}]
}