{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/components/Header/Header.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useTranslations } from 'next-intl';\r\n\r\nexport const Header = () => {\r\n    const t = useTranslations();\r\n  return (\r\n    <header>\r\n      <h2>Header con traducción</h2>\r\n      <div>\r\n        <h3>Traducción:</h3>\r\n        <p>{t('users-header-title')}</p>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;;;AAEO,MAAM,SAAS;IAClB,MAAM,IAAI,IAAA,qOAAe;IAC3B,qBACE,0PAAC;;0BACC,0PAAC;0BAAG;;;;;;0BACJ,0PAAC;;kCACC,0PAAC;kCAAG;;;;;;kCACJ,0PAAC;kCAAG,EAAE;;;;;;;;;;;;;;;;;;AAId","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/zustand/counterStore.ts"],"sourcesContent":["import { create } from 'zustand'\r\n\r\ninterface CounterState {\r\n  count: number\r\n  increment: () => void\r\n  decrement: () => void\r\n  reset: () => void\r\n}\r\n\r\nexport const useCounterStore = create<CounterState>((set) => ({\r\n  count: 0,\r\n  increment: () => set((state) => ({ count: state.count + 1 })),\r\n  decrement: () => set((state) => ({ count: state.count - 1 })),\r\n  reset: () => set({ count: 0 }),\r\n}))\r\n"],"names":[],"mappings":";;;;AAAA;;AASO,MAAM,kBAAkB,IAAA,8JAAM,EAAe,CAAC,MAAQ,CAAC;QAC5D,OAAO;QACP,WAAW,IAAM,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO,MAAM,KAAK,GAAG;gBAAE,CAAC;QAC3D,WAAW,IAAM,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO,MAAM,KAAK,GAAG;gBAAE,CAAC;QAC3D,OAAO,IAAM,IAAI;gBAAE,OAAO;YAAE;IAC9B,CAAC","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/components/MainContent/MainContent.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useCounterStore } from '../../../../services/zustand/counterStore'\r\n\r\nexport const MainContent = () => {\r\n  const { count, increment, decrement, reset } = useCounterStore()\r\n\r\n  return (\r\n    <div>\r\n      <h2>MainContent con Zustand</h2>\r\n      <div>\r\n        <p>Contador: {count}</p>\r\n        <button onClick={increment}>Incrementar</button>\r\n        <button onClick={decrement}>Decrementar</button>\r\n        <button onClick={reset}>Reset</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;;;AAEO,MAAM,cAAc;IACzB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,IAAA,kKAAe;IAE9D,qBACE,0PAAC;;0BACC,0PAAC;0BAAG;;;;;;0BACJ,0PAAC;;kCACC,0PAAC;;4BAAE;4BAAW;;;;;;;kCACd,0PAAC;wBAAO,SAAS;kCAAW;;;;;;kCAC5B,0PAAC;wBAAO,SAAS;kCAAW;;;;;;kCAC5B,0PAAC;wBAAO,SAAS;kCAAO;;;;;;;;;;;;;;;;;;AAIhC","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/growthbook/types.ts"],"sourcesContent":["export enum FeatureFlags {\r\n  TESTING_FIRST_KEY_FLAG = \"exampleFlag\",\r\n}\r\n//https://iop-pro-growthbkwb-swdevelop-private-global.apps.aks01-pro.azure.ecommerce.inditex.grp/features  -- acceso a la lista de features"],"names":[],"mappings":";;;;AAAO,IAAA,AAAK,sCAAA;;WAAA;KAGZ,2IAA2I","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/growthbook/useFeatureFlags.tsx"],"sourcesContent":["import { useMemo } from \"react\";\r\n\r\nimport { useFeatureValue } from \"@growthbook/growthbook-react\";\r\n\r\nimport { FeatureFlags } from \"./types\";\r\n\r\nexport const useFeatureFlags = () => {\r\n  const isEnableTestingFlag = useFeatureValue(FeatureFlags.TESTING_FIRST_KEY_FLAG, false );\r\n\r\n  return useMemo(\r\n    () => ({\r\n      isEnableTestingFlag,\r\n    }),\r\n    [isEnableTestingFlag]\r\n  );\r\n};\r\n\r\n\r\n// NOTAS BASICAS DE EJEMPLO:\r\n// para definir la clave de la feature flag ponerla en ./types.ts\r\n// const isEnableTestingFlag = useFeatureValue(FeatureFlags.KEY, \"defaultValue\");\r\n// para usar el hook en un componente\r\n// const { isEnableTestingFlag } = useFeatureFlags();\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;;;;AAEO,MAAM,kBAAkB;IAC7B,MAAM,sBAAsB,IAAA,0NAAe,EAAC,2JAAY,CAAC,sBAAsB,EAAE;IAEjF,OAAO,IAAA,4NAAO,EACZ,IAAM,CAAC;YACL;QACF,CAAC,GACD;QAAC;KAAoB;AAEzB,GAGA,4BAA4B;CAC5B,iEAAiE;CACjE,iFAAiF;CACjF,qCAAqC;CACrC,qDAAqD","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/usersKeyFactory.ts"],"sourcesContent":["export const usersKeyFactory = {\r\n  all: () => [\"all\"],\r\n  getUserByUserId: ({ userId }: { userId: string }) => [...usersKeyFactory.all(), \"users\", userId],\r\n};\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,kBAAkB;IAC7B,KAAK,IAAM;YAAC;SAAM;IAClB,iBAAiB,CAAC,EAAE,MAAM,EAAsB,GAAK;eAAI,gBAAgB,GAAG;YAAI;YAAS;SAAO;AAClG","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/clientFactory/axiosClient.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\n// Axios instance with custom response interceptor\nconst axiosClient = axios.create({\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nfunction dataResolverInterceptor(response: AxiosResponse) {\n  return response.data;\n}\n\naxiosClient.interceptors.response.use(dataResolverInterceptor);\n\ndeclare module \"axios\" {\n  export interface AxiosInstance {\n    request<T = unknown, R = T, D = T>(config: AxiosRequestConfig<D>): Promise<R>;\n    get<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    delete<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    head<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    post<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n    put<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n    patch<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n  }\n}\n\nexport { axiosClient };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,kDAAkD;AAClD,MAAM,cAAc,4JAAK,CAAC,MAAM,CAAC;IAC/B,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,SAAS,wBAAwB,QAAuB;IACtD,OAAO,SAAS,IAAI;AACtB;AAEA,YAAY,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/clientFactory/clientFactory.ts"],"sourcesContent":["import { axiosClient } from \"./axiosClient\";\n\nfunction resolveBaseUrl(apiEndpoint?: string, apiVersion?: string) {\n  const base = apiEndpoint ?? (process.env.NEXT_PUBLIC_API_BASEURL || \"\");\n  const version = apiVersion ? `/${apiVersion}` : \"\";\n  return `${base}${version}`;\n}\n\n/** GET */\nexport async function getCall<T, R = T, D = unknown>(\n  url: string,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.get<R, R, D>(fullUrl);\n  return resp;\n}\n\n/** POST */\nexport async function postCall<T, R = T, D = unknown>(\n  url: string,\n  data?: D,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.post<R, R, D>(fullUrl, data);\n  return resp;\n}\n\n/** PUT */\nexport async function putCall<T, R = T, D = unknown>(\n  url: string,\n  data?: D,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.put<R, R, D>(fullUrl, data);\n  return resp;\n}\n\n/** DELETE */\nexport async function deleteCall<T, R = T, D = unknown>(\n  url: string,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.delete<R, R, D>(fullUrl);\n  return resp;\n}\n\n\n\n/* EN CASO DE QUERER AÑADIR DECORATORS SE HARIA A ESTE NIVEL POR EJEMPLO: \n\naxiosClient.get<R, R, D>(fullUrl) ---> axiosClient.get<R, R, D>(fullUrl, withLocaleHeaders(config))\n\n\n*/"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAEA,SAAS,eAAe,WAAoB,EAAE,UAAmB;IAC/D,MAAM,OAAO,eAAe,CAAC,QAAQ,GAAG,CAAC,uBAAuB,IAAI,EAAE;IACtE,MAAM,UAAU,aAAa,CAAC,CAAC,EAAE,YAAY,GAAG;IAChD,OAAO,GAAG,OAAO,SAAS;AAC5B;AAGO,eAAe,QACpB,GAAW,EACX,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,GAAG,eAAe,aAAa,cAAc,KAAK;IAClE,MAAM,OAAO,MAAM,uLAAW,CAAC,GAAG,CAAU;IAC5C,OAAO;AACT;AAGO,eAAe,SACpB,GAAW,EACX,IAAQ,EACR,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,GAAG,eAAe,aAAa,cAAc,KAAK;IAClE,MAAM,OAAO,MAAM,uLAAW,CAAC,IAAI,CAAU,SAAS;IACtD,OAAO;AACT;AAGO,eAAe,QACpB,GAAW,EACX,IAAQ,EACR,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,GAAG,eAAe,aAAa,cAAc,KAAK;IAClE,MAAM,OAAO,MAAM,uLAAW,CAAC,GAAG,CAAU,SAAS;IACrD,OAAO;AACT;AAGO,eAAe,WACpB,GAAW,EACX,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,GAAG,eAAe,aAAa,cAAc,KAAK;IAClE,MAAM,OAAO,MAAM,uLAAW,CAAC,MAAM,CAAU;IAC/C,OAAO;AACT,EAIA;;;;;AAKA","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/users.ts"],"sourcesContent":["import { UserDTO } from \"../model/usersDTO\";\r\nimport { getCall } from \"./clientFactory/clientFactory\";\r\n\r\nexport function getUserByUserId({ userId }: { userId: string }) {\r\n  const response = getCall<UserDTO[]>(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n  return response;\r\n}"],"names":[],"mappings":";;;;AACA;;AAEO,SAAS,gBAAgB,EAAE,MAAM,EAAsB;IAC5D,MAAM,WAAW,IAAA,qLAAO,EAAY,CAAC,2CAA2C,EAAE,QAAQ;IAC1F,OAAO;AACT","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/useGetUserById.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\n\r\nimport { usersKeyFactory } from \"./usersKeyFactory\";\r\nimport { getUserByUserId } from \"@/services/domain/client/users\";\r\n\r\n\r\ntype UseGetUserByUserId = Parameters<typeof getUserByUserId>[number];\r\n\r\nconst useGetUserById = ({ userId }: UseGetUserByUserId) => {\r\n  const query = useQuery({\r\n    enabled: Boolean(userId),\r\n    queryKey: usersKeyFactory.getUserByUserId({ userId }),\r\n    queryFn: () => getUserByUserId({ userId }),\r\n  });\r\n\r\n  return query;\r\n};\r\n\r\nexport { useGetUserById };\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;AAKA,MAAM,iBAAiB,CAAC,EAAE,MAAM,EAAsB;IACpD,MAAM,QAAQ,IAAA,mMAAQ,EAAC;QACrB,SAAS,QAAQ;QACjB,UAAU,0KAAe,CAAC,eAAe,CAAC;YAAE;QAAO;QACnD,SAAS,IAAM,IAAA,oKAAe,EAAC;gBAAE;YAAO;IAC1C;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/index.ts"],"sourcesContent":["export * from \"./usersKeyFactory\";\nexport * from \"./useGetUserById\";\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/Users.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from 'react'\r\nimport { Header } from './components/Header/Header'\r\nimport { MainContent } from './components/MainContent/MainContent'\r\nimport { useFeatureFlags } from '@/services/growthbook/useFeatureFlags'\r\nimport { useGetUserById } from '@/services/api/users'\r\n\r\nexport const Users = () => {\r\n    const { isEnableTestingFlag } = useFeatureFlags();\r\n    const userData = useGetUserById({userId: \"1\"})\r\n    console.log(\"USER DATA\", userData.data)\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        <MainContent/>\r\n        \r\n        <section>\r\n          <h2>GrowthBook Feature Flags</h2>\r\n          <div>\r\n            <h3>Testing Flag Status:</h3>\r\n            <p>Flag activo: {isEnableTestingFlag ? 'Sí' : 'No'}</p>\r\n            {isEnableTestingFlag && (\r\n              <div style={{ padding: '10px', backgroundColor: '#e8f5e8', border: '1px solid #4caf50' }}>\r\n                ✅ Feature flag funcionando correctamente\r\n              </div>\r\n            )}\r\n          </div>\r\n        </section>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AAAA;AANA;;;;;;AAQO,MAAM,QAAQ;IACjB,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAA,yKAAe;IAC/C,MAAM,WAAW,IAAA,wKAAc,EAAC;QAAC,QAAQ;IAAG;IAC5C,QAAQ,GAAG,CAAC,aAAa,SAAS,IAAI;IACxC,qBACE,0PAAC;;0BACG,0PAAC,yKAAM;;;;;0BACP,0PAAC,wLAAW;;;;;0BAEZ,0PAAC;;kCACC,0PAAC;kCAAG;;;;;;kCACJ,0PAAC;;0CACC,0PAAC;0CAAG;;;;;;0CACJ,0PAAC;;oCAAE;oCAAc,sBAAsB,OAAO;;;;;;;4BAC7C,qCACC,0PAAC;gCAAI,OAAO;oCAAE,SAAS;oCAAQ,iBAAiB;oCAAW,QAAQ;gCAAoB;0CAAG;;;;;;;;;;;;;;;;;;;;;;;;AAQxG","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/query.ts"],"sourcesContent":["import { QueryClient } from '@tanstack/react-query';\r\nexport const queryClient = new QueryClient();"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,cAAc,IAAI,wMAAW","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/app/%5Blocale%5D/users/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Users } from \"@/screens/users/Users\";\r\nimport { QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { queryClient } from \"@/services/query\";\r\n\r\nexport default function Page() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Users />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,qBACE,0PAAC,yNAAmB;QAAC,QAAQ,4IAAW;kBACtC,cAAA,0PAAC,+IAAK;;;;;;;;;;AAGZ","debugId":null}}]
}