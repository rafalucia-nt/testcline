{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/hooks/useAutoTranslations.ts"],"sourcesContent":["import { useTranslations } from 'next-intl';\r\nimport { useMemo } from 'react';\r\n\r\n/**\r\n * Hook personalizado que automáticamente detecta el namespace de traducciones\r\n * basado en la ubicación del archivo que lo llama.\r\n * \r\n * Como alternativa más confiable, también acepta un namespace manual.\r\n * \r\n * @param manualNamespace - (Opcional) Namespace manual para casos específicos\r\n * @returns Función de traducción configurada con el namespace automático\r\n */\r\nexport function useAutoTranslations(manualNamespace?: string) {\r\n  const namespace = useMemo(() => {\r\n    // Si se proporciona un namespace manual, usarlo\r\n    if (manualNamespace) {\r\n      return manualNamespace;\r\n    }\r\n\r\n    // Intentar detectar automáticamente usando el stack trace\r\n    try {\r\n      const error = new Error();\r\n      const stack = error.stack;\r\n      \r\n      if (!stack) {\r\n        console.warn('useAutoTranslations: No se pudo obtener el stack trace');\r\n        return '';\r\n      }\r\n\r\n      // Buscar la línea del stack que corresponde al archivo que llama al hook\r\n      const stackLines = stack.split('\\n');\r\n      \r\n      for (let i = 2; i < stackLines.length; i++) {\r\n        const line = stackLines[i];\r\n        \r\n        // Buscar patrones de archivo en el stack trace\r\n        const fileMatch = line.match(/at.*\\((.+):(\\d+):(\\d+)\\)/) || line.match(/at (.+):(\\d+):(\\d+)/);\r\n        \r\n        if (fileMatch) {\r\n          const filePath = fileMatch[1];\r\n          \r\n          // Filtrar archivos internos y buscar archivos en screens\r\n          if (filePath && \r\n              !filePath.includes('node_modules') && \r\n              !filePath.includes('useAutoTranslations') &&\r\n              !filePath.includes('react-dom') &&\r\n              !filePath.includes('scheduler') &&\r\n              !filePath.includes('webpack') &&\r\n              filePath.includes('screens')) {\r\n            \r\n            // Generar namespace basado en la ruta\r\n            const normalizedPath = filePath.replace(/\\\\/g, '/');\r\n            const screensMatch = normalizedPath.match(/screens\\/([^\\/]+)\\/(.+)/);\r\n            \r\n            if (screensMatch) {\r\n              const feature = screensMatch[1]; // ej: \"users\"\r\n              const subPath = screensMatch[2]; // ej: \"components/Header/Header.tsx\"\r\n              \r\n              // Dividir el subPath y filtrar partes no deseadas\r\n              const pathParts = subPath.split('/');\r\n              pathParts.pop(); // Remover el archivo final\r\n              \r\n              // Filtrar \"components\" y convertir a lowercase\r\n              const namespaceParts = pathParts\r\n                .filter(part => part !== 'components')\r\n                .map(part => part.toLowerCase());\r\n              \r\n              // Construir el namespace final\r\n              const detectedNamespace = [feature.toLowerCase(), ...namespaceParts].join('.');\r\n              \r\n              return detectedNamespace;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('useAutoTranslations: Error en detección automática:', error);\r\n    }\r\n    \r\n    return '';\r\n  }, [manualNamespace]);\r\n\r\n  // Si no se pudo detectar el namespace, mostrar advertencia\r\n  if (!namespace) {\r\n    console.warn('useAutoTranslations: No se pudo detectar el namespace automáticamente. Considera usar el parámetro manual.');\r\n  }\r\n\r\n  return useTranslations(namespace);\r\n}\r\n\r\n/**\r\n * Hook alternativo más simple que requiere especificar el feature y componente\r\n * \r\n * @param feature - Nombre del feature (ej: 'users')\r\n * @param component - Nombre del componente (ej: 'header')\r\n * @returns Función de traducción configurada\r\n */\r\nexport function useFeatureTranslations(feature: string, component?: string) {\r\n  const namespace = component ? `${feature.toLowerCase()}.${component.toLowerCase()}` : feature.toLowerCase();\r\n  return useTranslations(namespace);\r\n}\r\n\r\n/**\r\n * Hook que construye el namespace basado en la estructura de carpetas\r\n * Este es el más confiable y recomendado\r\n * \r\n * @param parts - Partes del namespace (ej: ['users', 'header'])\r\n * @returns Función de traducción configurada\r\n */\r\nexport function useNamespaceTranslations(...parts: string[]) {\r\n  const namespace = parts.map(part => part.toLowerCase()).join('.');\r\n  return useTranslations(namespace);\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;;AAWO,SAAS,oBAAoB,eAAwB;;IAC1D,MAAM,YAAY,IAAA,wKAAO;kDAAC;YACxB,gDAAgD;YAChD,IAAI,iBAAiB;gBACnB,OAAO;YACT;YAEA,0DAA0D;YAC1D,IAAI;gBACF,MAAM,QAAQ,IAAI;gBAClB,MAAM,QAAQ,MAAM,KAAK;gBAEzB,IAAI,CAAC,OAAO;oBACV,QAAQ,IAAI,CAAC;oBACb,OAAO;gBACT;gBAEA,yEAAyE;gBACzE,MAAM,aAAa,MAAM,KAAK,CAAC;gBAE/B,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;oBAC1C,MAAM,OAAO,UAAU,CAAC,EAAE;oBAE1B,+CAA+C;oBAC/C,MAAM,YAAY,KAAK,KAAK,CAAC,+BAA+B,KAAK,KAAK,CAAC;oBAEvE,IAAI,WAAW;wBACb,MAAM,WAAW,SAAS,CAAC,EAAE;wBAE7B,yDAAyD;wBACzD,IAAI,YACA,CAAC,SAAS,QAAQ,CAAC,mBACnB,CAAC,SAAS,QAAQ,CAAC,0BACnB,CAAC,SAAS,QAAQ,CAAC,gBACnB,CAAC,SAAS,QAAQ,CAAC,gBACnB,CAAC,SAAS,QAAQ,CAAC,cACnB,SAAS,QAAQ,CAAC,YAAY;4BAEhC,sCAAsC;4BACtC,MAAM,iBAAiB,SAAS,OAAO,CAAC,OAAO;4BAC/C,MAAM,eAAe,eAAe,KAAK,CAAC;4BAE1C,IAAI,cAAc;gCAChB,MAAM,UAAU,YAAY,CAAC,EAAE,EAAE,cAAc;gCAC/C,MAAM,UAAU,YAAY,CAAC,EAAE,EAAE,qCAAqC;gCAEtE,kDAAkD;gCAClD,MAAM,YAAY,QAAQ,KAAK,CAAC;gCAChC,UAAU,GAAG,IAAI,2BAA2B;gCAE5C,+CAA+C;gCAC/C,MAAM,iBAAiB,UACpB,MAAM;6FAAC,CAAA,OAAQ,SAAS;4FACxB,GAAG;6FAAC,CAAA,OAAQ,KAAK,WAAW;;gCAE/B,+BAA+B;gCAC/B,MAAM,oBAAoB;oCAAC,QAAQ,WAAW;uCAAO;iCAAe,CAAC,IAAI,CAAC;gCAE1E,OAAO;4BACT;wBACF;oBACF;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uDAAuD;YACvE;YAEA,OAAO;QACT;iDAAG;QAAC;KAAgB;IAEpB,2DAA2D;IAC3D,IAAI,CAAC,WAAW;QACd,QAAQ,IAAI,CAAC;IACf;IAEA,OAAO,IAAA,4NAAe,EAAC;AACzB;GA5EgB;;QA2EP,4NAAe;;;AAUjB,SAAS,uBAAuB,OAAe,EAAE,SAAkB;;IACxE,MAAM,YAAY,YAAY,AAAC,GAA2B,OAAzB,QAAQ,WAAW,IAAG,KAA2B,OAAxB,UAAU,WAAW,MAAO,QAAQ,WAAW;IACzG,OAAO,IAAA,4NAAe,EAAC;AACzB;IAHgB;;QAEP,4NAAe;;;AAUjB,SAAS;IAAyB,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,QAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,MAAH,QAAA,SAAA,CAAA,KAAkB;;;IACzD,MAAM,YAAY,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,WAAW,IAAI,IAAI,CAAC;IAC7D,OAAO,IAAA,4NAAe,EAAC;AACzB;IAHgB;;QAEP,4NAAe","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/components/Header/Header.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useFeatureTranslations } from '../../../../hooks/useAutoTranslations';\r\n\r\nexport const Header = () => {\r\n    // Usar el hook más confiable especificando feature y componente\r\n    const t = useFeatureTranslations('users', 'header');\r\n  return (\r\n    <div>Header\r\n        {t('title')}\r\n    </div>\r\n\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;;;;AAEO,MAAM,SAAS;;IAClB,gEAAgE;IAChE,MAAM,IAAI,IAAA,yJAAsB,EAAC,SAAS;IAC5C,qBACE,6LAAC;;YAAI;YACA,EAAE;;;;;;;AAIX;GATa;;QAEC,yJAAsB;;;KAFvB","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/components/MainContent/MainContent.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport const MainContent = () => {\r\n  return (\r\n    <div>MainContent</div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,cAAc;IACzB,qBACE,6LAAC;kBAAI;;;;;;AAET;KAJa","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/growthbook/types.ts"],"sourcesContent":["export enum FeatureFlags {\r\n  TESTING_FIRST_KEY_FLAG = \"exampleFlag\",\r\n}\r\n//https://iop-pro-growthbkwb-swdevelop-private-global.apps.aks01-pro.azure.ecommerce.inditex.grp/features  -- acceso a la lista de features"],"names":[],"mappings":";;;;AAAO,IAAA,AAAK,sCAAA;;WAAA;KAGZ,2IAA2I","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/growthbook/useFeatureFlags.tsx"],"sourcesContent":["import { useMemo } from \"react\";\r\n\r\nimport { useFeatureValue } from \"@growthbook/growthbook-react\";\r\n\r\nimport { FeatureFlags } from \"./types\";\r\n\r\nexport const useFeatureFlags = () => {\r\n  const isEnableTestingFlag = useFeatureValue(FeatureFlags.TESTING_FIRST_KEY_FLAG, false );\r\n\r\n  return useMemo(\r\n    () => ({\r\n      isEnableTestingFlag,\r\n    }),\r\n    [isEnableTestingFlag]\r\n  );\r\n};\r\n\r\n\r\n// NOTAS BASICAS DE EJEMPLO:\r\n// para definir la clave de la feature flag ponerla en ./types.ts\r\n// const isEnableTestingFlag = useFeatureValue(FeatureFlags.KEY, \"defaultValue\");\r\n// para usar el hook en un componente\r\n// const { isEnableTestingFlag } = useFeatureFlags();\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;;;;;AAEO,MAAM,kBAAkB;;IAC7B,MAAM,sBAAsB,IAAA,iNAAe,EAAC,kJAAY,CAAC,sBAAsB,EAAE;IAEjF,OAAO,IAAA,wKAAO;mCACZ,IAAM,CAAC;gBACL;YACF,CAAC;kCACD;QAAC;KAAoB;AAEzB,GAGA,4BAA4B;CAC5B,iEAAiE;CACjE,iFAAiF;CACjF,qCAAqC;CACrC,qDAAqD;GAhBxC;;QACiB,iNAAe","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/usersKeyFactory.ts"],"sourcesContent":["export const usersKeyFactory = {\r\n  all: () => [\"all\"],\r\n  getUserByUserId: ({ userId }: { userId: string }) => [...usersKeyFactory.all(), \"users\", userId],\r\n};\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,kBAAkB;IAC7B,KAAK,IAAM;YAAC;SAAM;IAClB,iBAAiB;YAAC,EAAE,MAAM,EAAsB;eAAK;eAAI,gBAAgB,GAAG;YAAI;YAAS;SAAO;;AAClG","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/clientFactory/axiosClient.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\n// Axios instance with custom response interceptor\nconst axiosClient = axios.create({\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nfunction dataResolverInterceptor(response: AxiosResponse) {\n  return response.data;\n}\n\naxiosClient.interceptors.response.use(dataResolverInterceptor);\n\ndeclare module \"axios\" {\n  export interface AxiosInstance {\n    request<T = unknown, R = T, D = T>(config: AxiosRequestConfig<D>): Promise<R>;\n    get<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    delete<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    head<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    post<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n    put<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n    patch<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n  }\n}\n\nexport { axiosClient };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,kDAAkD;AAClD,MAAM,cAAc,mJAAK,CAAC,MAAM,CAAC;IAC/B,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,SAAS,wBAAwB,QAAuB;IACtD,OAAO,SAAS,IAAI;AACtB;AAEA,YAAY,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/clientFactory/clientFactory.ts"],"sourcesContent":["import { axiosClient } from \"./axiosClient\";\n\nfunction resolveBaseUrl(apiEndpoint?: string, apiVersion?: string) {\n  const base = apiEndpoint ?? (process.env.NEXT_PUBLIC_API_BASEURL || \"\");\n  const version = apiVersion ? `/${apiVersion}` : \"\";\n  return `${base}${version}`;\n}\n\n/** GET */\nexport async function getCall<T, R = T, D = unknown>(\n  url: string,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.get<R, R, D>(fullUrl);\n  return resp;\n}\n\n/** POST */\nexport async function postCall<T, R = T, D = unknown>(\n  url: string,\n  data?: D,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.post<R, R, D>(fullUrl, data);\n  return resp;\n}\n\n/** PUT */\nexport async function putCall<T, R = T, D = unknown>(\n  url: string,\n  data?: D,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.put<R, R, D>(fullUrl, data);\n  return resp;\n}\n\n/** DELETE */\nexport async function deleteCall<T, R = T, D = unknown>(\n  url: string,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.delete<R, R, D>(fullUrl);\n  return resp;\n}\n\n\n\n/* EN CASO DE QUERER AÑADIR DECORATORS SE HARIA A ESTE NIVEL POR EJEMPLO: \n\naxiosClient.get<R, R, D>(fullUrl) ---> axiosClient.get<R, R, D>(fullUrl, withLocaleHeaders(config))\n\n\n*/"],"names":[],"mappings":";;;;;;;;;;AAG+B;AAH/B;;AAEA,SAAS,eAAe,WAAoB,EAAE,UAAmB;IAC/D,MAAM,OAAO,wBAAA,yBAAA,cAAgB,2KAAO,CAAC,GAAG,CAAC,uBAAuB,IAAI;IACpE,MAAM,UAAU,aAAa,AAAC,IAAc,OAAX,cAAe;IAChD,OAAO,AAAC,GAAS,OAAP,MAAe,OAAR;AACnB;AAGO,eAAe,QACpB,GAAW,EACX,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,GAAG,CAAU;IAC5C,OAAO;AACT;AAGO,eAAe,SACpB,GAAW,EACX,IAAQ,EACR,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,IAAI,CAAU,SAAS;IACtD,OAAO;AACT;AAGO,eAAe,QACpB,GAAW,EACX,IAAQ,EACR,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,GAAG,CAAU,SAAS;IACrD,OAAO;AACT;AAGO,eAAe,WACpB,GAAW,EACX,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,MAAM,CAAU;IAC/C,OAAO;AACT,EAIA;;;;;AAKA","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/users.ts"],"sourcesContent":["import { UserDTO } from \"../model/usersDTO\";\r\nimport { getCall } from \"./clientFactory/clientFactory\";\r\n\r\nexport function getUserByUserId({ userId }: { userId: string }) {\r\n  const response = getCall<UserDTO[]>(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n  return response;\r\n}"],"names":[],"mappings":";;;;AACA;;AAEO,SAAS,gBAAgB,KAA8B;QAA9B,EAAE,MAAM,EAAsB,GAA9B;IAC9B,MAAM,WAAW,IAAA,4KAAO,EAAY,AAAC,8CAAoD,OAAP;IAClF,OAAO;AACT","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/useGetUserById.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\n\r\nimport { usersKeyFactory } from \"./usersKeyFactory\";\r\nimport { getUserByUserId } from \"@/services/domain/client/users\";\r\n\r\n\r\ntype UseGetUserByUserId = Parameters<typeof getUserByUserId>[number];\r\n\r\nconst useGetUserById = ({ userId }: UseGetUserByUserId) => {\r\n  const query = useQuery({\r\n    enabled: Boolean(userId),\r\n    queryKey: usersKeyFactory.getUserByUserId({ userId }),\r\n    queryFn: () => getUserByUserId({ userId }),\r\n  });\r\n\r\n  return query;\r\n};\r\n\r\nexport { useGetUserById };\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;AAKA,MAAM,iBAAiB;QAAC,EAAE,MAAM,EAAsB;;IACpD,MAAM,QAAQ,IAAA,0LAAQ,EAAC;QACrB,SAAS,QAAQ;QACjB,UAAU,iKAAe,CAAC,eAAe,CAAC;YAAE;QAAO;QACnD,OAAO;8CAAE,IAAM,IAAA,2JAAe,EAAC;oBAAE;gBAAO;;IAC1C;IAEA,OAAO;AACT;GARM;;QACU,0LAAQ","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/index.ts"],"sourcesContent":["export * from \"./usersKeyFactory\";\nexport * from \"./useGetUserById\";\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/Users.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from 'react'\r\nimport { Header } from './components/Header/Header'\r\nimport { MainContent } from './components/MainContent/MainContent'\r\nimport { useFeatureFlags } from '@/services/growthbook/useFeatureFlags'\r\nimport { useGetUserById } from '@/services/api/users'\r\nimport { useTranslations } from 'next-intl'\r\n\r\nexport const Users = () => {\r\n    const { isEnableTestingFlag } = useFeatureFlags();\r\n    const userData = useGetUserById({userId: \"1\"})\r\n    console.log(\"USER DATA\", userData.data)\r\n    const t = useTranslations('home');\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        <MainContent/>\r\n        {isEnableTestingFlag && \"example flag working\"}\r\n        <br></br>\r\n        {t('title')}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;;;AAPA;;;;;;AASO,MAAM,QAAQ;;IACjB,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAA,gKAAe;IAC/C,MAAM,WAAW,IAAA,+JAAc,EAAC;QAAC,QAAQ;IAAG;IAC5C,QAAQ,GAAG,CAAC,aAAa,SAAS,IAAI;IACtC,MAAM,IAAI,IAAA,4NAAe,EAAC;IAC5B,qBACE,6LAAC;;0BACG,6LAAC,gKAAM;;;;;0BACP,6LAAC,+KAAW;;;;;YACX,uBAAuB;0BACxB,6LAAC;;;;;YACA,EAAE;;;;;;;AAGX;GAda;;QACuB,gKAAe;QAC9B,+JAAc;QAErB,4NAAe;;;KAJhB","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/query.ts"],"sourcesContent":["import { QueryClient } from '@tanstack/react-query';\r\nexport const queryClient = new QueryClient();"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,cAAc,IAAI,+LAAW","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/app/%5Blocale%5D/users/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Users } from \"@/screens/users/Users\";\r\nimport { QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { queryClient } from \"@/services/query\";\r\n\r\nexport default function Page() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Users />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,qBACE,6LAAC,gNAAmB;QAAC,QAAQ,mIAAW;kBACtC,cAAA,6LAAC,sIAAK;;;;;;;;;;AAGZ;KANwB","debugId":null}}]
}