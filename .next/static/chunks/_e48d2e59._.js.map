{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/components/Header/Header.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div>Header</div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,SAAS;IACpB,qBACE,6LAAC;kBAAI;;;;;;AAET;KAJa","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/components/MainContent/MainContent.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport const MainContent = () => {\r\n  return (\r\n    <div>MainContent</div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,cAAc;IACzB,qBACE,6LAAC;kBAAI;;;;;;AAET;KAJa","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/growthbook/types.ts"],"sourcesContent":["export enum FeatureFlags {\r\n  TESTING_FIRST_KEY_FLAG = \"exampleFlag\",\r\n}\r\n//https://iop-pro-growthbkwb-swdevelop-private-global.apps.aks01-pro.azure.ecommerce.inditex.grp/features  -- acceso a la lista de features"],"names":[],"mappings":";;;;AAAO,IAAA,AAAK,sCAAA;;WAAA;KAGZ,2IAA2I","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/growthbook/useFeatureFlags.tsx"],"sourcesContent":["import { useMemo } from \"react\";\r\n\r\nimport { useFeatureValue } from \"@growthbook/growthbook-react\";\r\n\r\nimport { FeatureFlags } from \"./types\";\r\n\r\nexport const useFeatureFlags = () => {\r\n  const isEnableTestingFlag = useFeatureValue(FeatureFlags.TESTING_FIRST_KEY_FLAG, false );\r\n\r\n  return useMemo(\r\n    () => ({\r\n      isEnableTestingFlag,\r\n    }),\r\n    [isEnableTestingFlag]\r\n  );\r\n};\r\n\r\n\r\n// NOTAS BASICAS DE EJEMPLO:\r\n// para definir la clave de la feature flag ponerla en ./types.ts\r\n// const isEnableTestingFlag = useFeatureValue(FeatureFlags.KEY, \"defaultValue\");\r\n// para usar el hook en un componente\r\n// const { isEnableTestingFlag } = useFeatureFlags();\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;;;;;AAEO,MAAM,kBAAkB;;IAC7B,MAAM,sBAAsB,IAAA,iNAAe,EAAC,kJAAY,CAAC,sBAAsB,EAAE;IAEjF,OAAO,IAAA,wKAAO;mCACZ,IAAM,CAAC;gBACL;YACF,CAAC;kCACD;QAAC;KAAoB;AAEzB,GAGA,4BAA4B;CAC5B,iEAAiE;CACjE,iFAAiF;CACjF,qCAAqC;CACrC,qDAAqD;GAhBxC;;QACiB,iNAAe","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/usersKeyFactory.ts"],"sourcesContent":["export const usersKeyFactory = {\r\n  all: () => [\"all\"],\r\n  getUserByUserId: ({ userId }: { userId: string }) => [...usersKeyFactory.all(), \"users\", userId],\r\n};\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,kBAAkB;IAC7B,KAAK,IAAM;YAAC;SAAM;IAClB,iBAAiB;YAAC,EAAE,MAAM,EAAsB;eAAK;eAAI,gBAAgB,GAAG;YAAI;YAAS;SAAO;;AAClG","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/clientFactory/axiosClient.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\n// Axios instance with custom response interceptor\nconst axiosClient = axios.create({\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nfunction dataResolverInterceptor(response: AxiosResponse) {\n  return response.data;\n}\n\naxiosClient.interceptors.response.use(dataResolverInterceptor);\n\ndeclare module \"axios\" {\n  export interface AxiosInstance {\n    request<T = unknown, R = T, D = T>(config: AxiosRequestConfig<D>): Promise<R>;\n    get<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    delete<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    head<T = unknown, R = T, D = T>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n    post<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n    put<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n    patch<T = unknown, R = T, D = T>(url: string, data?: unknown, config?: AxiosRequestConfig<D>): Promise<R>;\n  }\n}\n\nexport { axiosClient };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,kDAAkD;AAClD,MAAM,cAAc,mJAAK,CAAC,MAAM,CAAC;IAC/B,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,SAAS,wBAAwB,QAAuB;IACtD,OAAO,SAAS,IAAI;AACtB;AAEA,YAAY,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/clientFactory/clientFactory.ts"],"sourcesContent":["import { axiosClient } from \"./axiosClient\";\n\nfunction resolveBaseUrl(apiEndpoint?: string, apiVersion?: string) {\n  const base = apiEndpoint ?? (process.env.NEXT_PUBLIC_API_BASEURL || \"\");\n  const version = apiVersion ? `/${apiVersion}` : \"\";\n  return `${base}${version}`;\n}\n\n/** GET */\nexport async function getCall<T, R = T, D = unknown>(\n  url: string,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.get<R, R, D>(fullUrl);\n  return resp;\n}\n\n/** POST */\nexport async function postCall<T, R = T, D = unknown>(\n  url: string,\n  data?: D,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.post<R, R, D>(fullUrl, data);\n  return resp;\n}\n\n/** PUT */\nexport async function putCall<T, R = T, D = unknown>(\n  url: string,\n  data?: D,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.put<R, R, D>(fullUrl, data);\n  return resp;\n}\n\n/** DELETE */\nexport async function deleteCall<T, R = T, D = unknown>(\n  url: string,\n  apiEndpoint?: string,\n  apiVersion?: string\n): Promise<R> {\n  const fullUrl = `${resolveBaseUrl(apiEndpoint, apiVersion)}${url}`;\n  const resp = await axiosClient.delete<R, R, D>(fullUrl);\n  return resp;\n}\n\n\n\n/* EN CASO DE QUERER AÃ‘ADIR DECORATORS SE HARIA A ESTE NIVEL POR EJEMPLO: \n\naxiosClient.get<R, R, D>(fullUrl) ---> axiosClient.get<R, R, D>(fullUrl, withLocaleHeaders(config))\n\n\n*/"],"names":[],"mappings":";;;;;;;;;;AAG+B;AAH/B;;AAEA,SAAS,eAAe,WAAoB,EAAE,UAAmB;IAC/D,MAAM,OAAO,wBAAA,yBAAA,cAAgB,2KAAO,CAAC,GAAG,CAAC,uBAAuB,IAAI;IACpE,MAAM,UAAU,aAAa,AAAC,IAAc,OAAX,cAAe;IAChD,OAAO,AAAC,GAAS,OAAP,MAAe,OAAR;AACnB;AAGO,eAAe,QACpB,GAAW,EACX,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,GAAG,CAAU;IAC5C,OAAO;AACT;AAGO,eAAe,SACpB,GAAW,EACX,IAAQ,EACR,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,IAAI,CAAU,SAAS;IACtD,OAAO;AACT;AAGO,eAAe,QACpB,GAAW,EACX,IAAQ,EACR,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,GAAG,CAAU,SAAS;IACrD,OAAO;AACT;AAGO,eAAe,WACpB,GAAW,EACX,WAAoB,EACpB,UAAmB;IAEnB,MAAM,UAAU,AAAC,GAA4C,OAA1C,eAAe,aAAa,aAAkB,OAAJ;IAC7D,MAAM,OAAO,MAAM,8KAAW,CAAC,MAAM,CAAU;IAC/C,OAAO;AACT,EAIA;;;;;AAKA","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/domain/client/users.ts"],"sourcesContent":["import { UserDTO } from \"../model/usersDTO\";\r\nimport { getCall } from \"./clientFactory/clientFactory\";\r\n\r\nexport function getUserByUserId({ userId }: { userId: string }) {\r\n  const response = getCall<UserDTO[]>(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n  return response;\r\n}"],"names":[],"mappings":";;;;AACA;;AAEO,SAAS,gBAAgB,KAA8B;QAA9B,EAAE,MAAM,EAAsB,GAA9B;IAC9B,MAAM,WAAW,IAAA,4KAAO,EAAY,AAAC,8CAAoD,OAAP;IAClF,OAAO;AACT","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/useGetUserById.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\n\r\nimport { usersKeyFactory } from \"./usersKeyFactory\";\r\nimport { getUserByUserId } from \"@/services/domain/client/users\";\r\n\r\n\r\ntype UseGetUserByUserId = Parameters<typeof getUserByUserId>[number];\r\n\r\nconst useGetUserById = ({ userId }: UseGetUserByUserId) => {\r\n  const query = useQuery({\r\n    enabled: Boolean(userId),\r\n    queryKey: usersKeyFactory.getUserByUserId({ userId }),\r\n    queryFn: () => getUserByUserId({ userId }),\r\n  });\r\n\r\n  return query;\r\n};\r\n\r\nexport { useGetUserById };\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;AAKA,MAAM,iBAAiB;QAAC,EAAE,MAAM,EAAsB;;IACpD,MAAM,QAAQ,IAAA,0LAAQ,EAAC;QACrB,SAAS,QAAQ;QACjB,UAAU,iKAAe,CAAC,eAAe,CAAC;YAAE;QAAO;QACnD,OAAO;8CAAE,IAAM,IAAA,2JAAe,EAAC;oBAAE;gBAAO;;IAC1C;IAEA,OAAO;AACT;GARM;;QACU,0LAAQ","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/api/users/index.ts"],"sourcesContent":["export * from \"./usersKeyFactory\";\nexport * from \"./useGetUserById\";\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/screens/users/Users.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from 'react'\r\nimport { Header } from './components/Header/Header'\r\nimport { MainContent } from './components/MainContent/MainContent'\r\nimport { useFeatureFlags } from '@/services/growthbook/useFeatureFlags'\r\nimport { useGetUserById } from '@/services/api/users'\r\n\r\nexport const Users = () => {\r\n    const { isEnableTestingFlag } = useFeatureFlags();\r\n    const userData = useGetUserById({userId: \"1\"})\r\n    console.log(\"USER DATA\", userData.data)\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        <MainContent/>\r\n        {isEnableTestingFlag && \"example flag working\"}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AAAA;;;AANA;;;;;AAQO,MAAM,QAAQ;;IACjB,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAA,gKAAe;IAC/C,MAAM,WAAW,IAAA,+JAAc,EAAC;QAAC,QAAQ;IAAG;IAC5C,QAAQ,GAAG,CAAC,aAAa,SAAS,IAAI;IACxC,qBACE,6LAAC;;0BACG,6LAAC,gKAAM;;;;;0BACP,6LAAC,+KAAW;;;;;YACX,uBAAuB;;;;;;;AAGhC;GAXa;;QACuB,gKAAe;QAC9B,+JAAc;;;KAFtB","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/services/query.ts"],"sourcesContent":["import { QueryClient } from '@tanstack/react-query';\r\nexport const queryClient = new QueryClient();"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,cAAc,IAAI,+LAAW","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Guille/Documents/Ntasys-Automate/frontend/app/users/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Users } from \"@/screens/users/Users\";\r\nimport { QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { queryClient } from \"@/services/query\";\r\n\r\nexport default function Page() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Users />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,qBACE,6LAAC,gNAAmB;QAAC,QAAQ,mIAAW;kBACtC,cAAA,6LAAC,sIAAK;;;;;;;;;;AAGZ;KANwB","debugId":null}}]
}